buildscript {
    ext {
        kotlin_version = "1.3.61"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
}

java {
    sourceCompatibility=JavaVersion.VERSION_11
    targetCompatibility=JavaVersion.VERSION_11
    assert System.properties["java.specification.version"] == "1.8" || "11" || "12" || "13"
}

repositories {
    mavenCentral()
    jcenter()
}

group = "org.awong"
version = "0.0.1-SNAPSHOT"

test {
    useJUnitPlatform()
    testLogging {
        events "FAILED", "SKIPPED"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation "io.qala.datagen:qala-datagen:$datagen_version"
    testImplementation "io.qala.datagen:qala-datagen-java8types:$datagen_version"
    // testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"

    // spek requires kotlin-reflect, can be omitted if already in the classpath
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek_version"

    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

wrapper {
    gradleVersion = "${gradle_version}"
}